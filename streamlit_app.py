# -*- coding: utf-8 -*-
"""student_course_predictor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zVBUr81JTmRuws35Nxv9GUuSw7A8TNXs
"""

import numpy as np
import pandas as pd
from sklearn import tree
from sklearn.ensemble import RandomForestClassifier
from sklearn.naive_bayes import GaussianNB

l1=['Drawing','Dancing','Singing','Sports','Video Game','Acting','Travelling',
    'Gardening','Animals','Photography','Teaching',
    'Exercise','Coding','Electricity Components','Mechanic Parts','Computer Parts','Researching','Architecture',
    'Historic Collection','Botany','Zoology','Physics','Accounting','Economics','Sociology','Geography',
    'Psycology','History','Science','Bussiness Education','Chemistry','Mathematics','Biology','Makeup','Designing',
    'Content writing','Crafting','Literature','Reading','Cartooning','Debating','Asrtology',
    'Hindi','French','English','Other Language',
    'Solving Puzzles','Gymnastics','Yoga','Engeeniering','Doctor','Pharmisist','Cycling','Knitting',
    'Director','Journalism','Bussiness','Listening Music'
]

Course=['BBA- Bachelor of Business Administration',
'BEM- Bachelor of Event Management',
'Integrated Law Course- BA + LL.B',
'BJMC- Bachelor of Journalism and Mass Communication',
'BFD- Bachelor of Fashion Designing',
'BBS- Bachelor of Business Studies',
'BTTM- Bachelor of Travel and Tourism Management',
'BVA- Bachelor of Visual Arts',
'BA in History',
'B.Arch- Bachelor of Architecture',
'BCA- Bachelor of Computer Applications',
'B.Sc.- Information Technology',
'B.Sc- Nursing',
'BPharma- Bachelor of Pharmacy',
'BDS- Bachelor of Dental Surgery',
'Animation, Graphics and Multimedia',
'B.Sc- Applied Geology',
'B.Sc.- Physics',
'B.Sc. Chemistry',
'B.Sc. Mathematics',
'B.Tech.-Civil Engineering',
'B.Tech.-Computer Science and Engineering',
'B.Tech.-Electrical and Electronics Engineering',
'B.Tech.-Electronics and Communication Engineering',
'B.Tech.-Mechanical Engineering',
'B.Com- Bachelor of Commerce',
'BA in Economics',
'CA- Chartered Accountancy',
'CS- Company Secretary',
'Diploma in Dramatic Arts',
'MBBS',
'Civil Services',
'BA in English',
'BA in Hindi',
'B.Ed.'
]

l2=[]
for x in range(0,len(l1)):
    l2.append(0)

df=pd.read_csv("stud_training.csv")   ##Path of your training csv file

df.replace({'Courses':{'BBA- Bachelor of Business Administration':0,
'BEM- Bachelor of Event Management':1,
'Integrated Law Course- BA + LL.B':2,
'BJMC- Bachelor of Journalism and Mass Communication':3,
'BFD- Bachelor of Fashion Designing':4,
'BBS- Bachelor of Business Studies':5,
'BTTM- Bachelor of Travel and Tourism Management':6,
'BVA- Bachelor of Visual Arts':7,
'BA in History':8,
'B.Arch- Bachelor of Architecture':9,
'BCA- Bachelor of Computer Applications':10,
'B.Sc.- Information Technology':11,
'B.Sc- Nursing':12,
'BPharma- Bachelor of Pharmacy':13,
'BDS- Bachelor of Dental Surgery':14,
'Animation, Graphics and Multimedia':15,
'B.Sc- Applied Geology':16,
'B.Sc.- Physics':17,
'B.Sc. Chemistry':18,
'B.Sc. Mathematics':19,
'B.Tech.-Civil Engineering':20,
'B.Tech.-Computer Science and Engineering':21,
'B.Tech.-Electrical and Electronics Engineering':22,
'B.Tech.-Electronics and Communication Engineering':23,
'B.Tech.-Mechanical Engineering':24,
'B.Com- Bachelor of Commerce':25,
'BA in Economics':26,
'CA- Chartered Accountancy':27,
'CS- Company Secretary':28,
'Diploma in Dramatic Arts':29,
'MBBS':30,
'Civil Services':31,
'BA in English':32,
'BA in Hindi':33,
'B.Ed.':34
}},inplace=True)

X= df[l1]

y = df[["Courses"]]
np.ravel(y)

clf3 = tree.DecisionTreeClassifier()   # empty model of the decision tree
clf3 = clf3.fit(X, y)

tr=pd.read_csv("stud_testing.csv" ) ##Path of your testing csv file

tr.replace({'Courses':{'BBA- Bachelor of Business Administration':0,
'BEM- Bachelor of Event Management':1,
'Integrated Law Course- BA + LL.B':2,
'BJMC- Bachelor of Journalism and Mass Communication':3,
'BFD- Bachelor of Fashion Designing':4,
'BBS- Bachelor of Business Studies':5,
'BTTM- Bachelor of Travel and Tourism Management':6,
'BVA- Bachelor of Visual Arts':7,
'BA in History':8,
'B.Arch- Bachelor of Architecture':9,
'BCA- Bachelor of Computer Applications':10,
'B.Sc.- Information Technology':11,
'B.Sc- Nursing':12,
'BPharma- Bachelor of Pharmacy':13,
'BDS- Bachelor of Dental Surgery':14,
'Animation, Graphics and Multimedia':15,
'B.Sc- Applied Geology':16,
'B.Sc.- Physics':17,
'B.Sc. Chemistry':18,
'B.Sc. Mathematics':19,
'B.Tech.-Civil Engineering':20,
'B.Tech.-Computer Science and Engineering':21,
'B.Tech.-Electrical and Electronics Engineering':22,
'B.Tech.-Electronics and Communication Engineering':23,
'B.Tech.-Mechanical Engineering':24,
'B.Com- Bachelor of Commerce':25,
'BA in Economics':26,
'CA- Chartered Accountancy':27,
'CS- Company Secretary':28,
'Diploma in Dramatic Arts':29,
'MBBS':30,
'Civil Services':31,
'BA in English':32,
'BA in Hindi':33,
'B.Ed.':34
}},inplace=True)

X_test= tr[l1]
y_test = tr[["Courses"]]
np.ravel(y_test)

clf4 = RandomForestClassifier()
clf4 = clf4.fit(X, np.ravel(y))

gnb = GaussianNB()
gnb = gnb.fit(X, np.ravel(y))

def get_interests():
    print("Enter your interests (up to 5):")
    interests = []
    for i in range(5):
        interest = input(f"Interest {i+1}: ")
        interests.append(interest)
    return interests

def predict_course(interests, clf):
    for k in range(0,len(l1)):
        for z in interests:
            if(z==l1[k]):
                l2[k]=1

    inputtest = [l2]
    predict = clf.predict(inputtest)
    predicted = predict[0]

    for a in range(0,len(Course)):
        if predicted == a:
            return Course[a]

def main():
    interests = get_interests()
    predicted_course_dt = predict_course(interests, clf3)
    predicted_course_rf = predict_course(interests, clf4)
    predicted_course_nb = predict_course(interests, gnb)
    print("Predicted Course (Decision Tree):", predicted_course_dt)
    print("Predicted Course (Random Forest):", predicted_course_rf)
    print("Predicted Course (Naive Bayes):", predicted_course_nb)

if __name__ == "__main__":
    main()

